{
  "id" : "41cb6fee-a372-41e9-ab76-74798b7b6b01",
  "realm" : "tani-bilet",
  "displayName" : "",
  "displayNameHtml" : "",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : true,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "bruteForceStrategy" : "MULTIPLE",
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "fe90e24f-a964-49e9-97d5-6b1e69503b8d",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "41cb6fee-a372-41e9-ab76-74798b7b6b01",
      "attributes" : { }
    }, {
      "id" : "3eda74a9-ad88-4aaf-98ac-b3bbf9c065f1",
      "name" : "default-roles-tani-bilet",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "41cb6fee-a372-41e9-ab76-74798b7b6b01",
      "attributes" : { }
    }, {
      "id" : "f80b17e3-642c-4c8f-b554-3ea3c75f2689",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "41cb6fee-a372-41e9-ab76-74798b7b6b01",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "91819403-af6f-43d7-83f1-61caf787521d",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "27376933-bfcb-4ae7-8315-f3578dae5465",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "bf31f6b7-c5c2-431c-948c-6d85e7a41de5",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "1530ee29-a67c-4346-b376-f1fb7866bf3f",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "ad8dbcc0-12c1-4ec2-b4f4-be5495053b41",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "eab75287-5f59-4207-8096-a267bb158755",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "461f9c41-85a0-4227-8bc8-4b3c62d6af61",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "3efd2d4a-7ac9-4ab0-90b8-ef0d8a6418ce",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "150d7666-4319-48e5-acb3-fdca33abeaa9",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "73dbc004-2566-4368-83a0-637dc67e982f",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "2099d0bb-cc1e-4bab-bdb5-e4fbe103e00f",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "4413f7f6-14dd-496c-9e4c-1cbfaea79d6e",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "create-client", "manage-identity-providers", "manage-events", "view-users", "query-groups", "view-identity-providers", "manage-clients", "query-users", "impersonation", "view-authorization", "manage-realm", "view-clients", "view-events", "manage-authorization", "query-clients", "view-realm", "manage-users", "query-realms" ]
          }
        },
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "d5de0b28-9797-41f2-8f8b-db63bb95a98b",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "046de417-8331-433b-a7f0-035def9de7ca",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "1a9b9bc5-5923-4b0c-8a91-b77502350b7a",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "78c008db-07f4-47e3-b2c5-04ce17415310",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "009e1a11-1cf4-4db1-a69d-3bc9f9aedf06",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "c8ec76fb-bf3e-4210-9c7f-e583cb1e6a62",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      }, {
        "id" : "96748a36-9800-4a34-848a-958d3a39f57e",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e024546a-8887-4416-8c25-43177edb0e3a",
        "attributes" : { }
      } ],
      "tani-bilet-app" : [ {
        "id" : "01688e8b-5e5e-4052-90e0-3e0e77be31c0",
        "name" : "event_creator",
        "description" : "This role grants the permissions to create and manage events",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "66e6d398-8a24-4e86-a1d5-7ae54d450659",
        "attributes" : { }
      }, {
        "id" : "2e111dd5-42e0-46bc-b22e-ef965a07f30a",
        "name" : "superuser",
        "description" : "This role grants permission to do anything",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "66e6d398-8a24-4e86-a1d5-7ae54d450659",
        "attributes" : { }
      }, {
        "id" : "b6e03336-2784-4366-8718-2d557e42fd58",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "66e6d398-8a24-4e86-a1d5-7ae54d450659",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "1fa9119a-9266-468a-a048-d2e67d69ed1e",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "11eb6fe2-76b5-4962-9cb7-aea17d437a15",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "7b94777c-e563-49da-b059-a4fa9dfe531a",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2501de98-0583-4eba-984a-80edd254207b",
        "attributes" : { }
      }, {
        "id" : "fbdeb760-becd-4eda-baa3-9219a0147a5e",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2501de98-0583-4eba-984a-80edd254207b",
        "attributes" : { }
      }, {
        "id" : "40b27a8b-cf7d-44d5-a9a0-304ce810f1af",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2501de98-0583-4eba-984a-80edd254207b",
        "attributes" : { }
      }, {
        "id" : "667a9a88-265d-4410-9238-1afc22f30b78",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2501de98-0583-4eba-984a-80edd254207b",
        "attributes" : { }
      }, {
        "id" : "a47294d4-bec3-4c1f-ba59-d6c9e1072a6a",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2501de98-0583-4eba-984a-80edd254207b",
        "attributes" : { }
      }, {
        "id" : "78ee08fb-9708-41c5-8780-6975ca6a08de",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "2501de98-0583-4eba-984a-80edd254207b",
        "attributes" : { }
      }, {
        "id" : "87085d0a-fd4a-4f11-847b-7f62ff59a384",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2501de98-0583-4eba-984a-80edd254207b",
        "attributes" : { }
      }, {
        "id" : "0ec3c18d-6737-449d-8d35-9e58ec04acfe",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "2501de98-0583-4eba-984a-80edd254207b",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "3eda74a9-ad88-4aaf-98ac-b3bbf9c065f1",
    "name" : "default-roles-tani-bilet",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "41cb6fee-a372-41e9-ab76-74798b7b6b01"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "d1f86316-dd3c-4e24-a9a3-5b459120d53d",
    "username" : "creator",
    "firstName" : "Zbigniew",
    "lastName" : "Stonoga",
    "email" : "zbigniew@a",
    "emailVerified" : false,
    "createdTimestamp" : 1744284956535,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "fc2a0c8f-a11b-4f54-95e1-9a014711f509",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1744284977159,
      "secretData" : "{\"value\":\"EuABUaThbhOVF8pqi2NMCz/2o9EqBxh5EKIHRsWeVJo=\",\"salt\":\"NJNHGayimGR/l9T8QE3keQ==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-tani-bilet" ],
    "clientRoles" : {
      "tani-bilet-app" : [ "event_creator" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "4c5aa51a-f296-4639-b030-2791abd42f0e",
    "username" : "service-account-tani-bilet-app",
    "emailVerified" : false,
    "createdTimestamp" : 1742481400271,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "tani-bilet-app",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-tani-bilet" ],
    "clientRoles" : {
      "tani-bilet-app" : [ "uma_protection" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "ddee3e18-e2a0-4877-b089-0074656d9f77",
    "username" : "zenek",
    "firstName" : "Zenek",
    "lastName" : "Martyniuk",
    "email" : "zenek@zenek",
    "emailVerified" : false,
    "createdTimestamp" : 1743073291462,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "93fff5c3-1ade-4749-ae22-61f0e19503a3",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1743073320795,
      "secretData" : "{\"value\":\"jhgNzDdJWfCwlgV6+eOxE/F5S7JdM30bU5hH8F1akpM=\",\"salt\":\"7sB+ZqD8y+XCLa1w8EeMdw==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-tani-bilet" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "2501de98-0583-4eba-984a-80edd254207b",
    "clientId" : "account",
    "name" : "${client_account}",
    "description" : "",
    "rootUrl" : "${authBaseUrl}",
    "adminUrl" : "",
    "baseUrl" : "/realms/tani-bilet/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/tani-bilet/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : true,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "+",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "e09192a5-4d14-4a3d-9df8-15a42369ee41",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/tani-bilet/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/tani-bilet/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "dbb3f0d7-57b5-4f43-865a-d97624df1fbf",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "dc12abab-29d9-43bb-a430-13c5c7141687",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "11eb6fe2-76b5-4962-9cb7-aea17d437a15",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "e024546a-8887-4416-8c25-43177edb0e3a",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "10216a17-2d9a-43c8-bf67-b7c6097d1fc3",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/tani-bilet/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/tani-bilet/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "87f102b9-0e90-45ad-9cca-92cf89a09ed0",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "66e6d398-8a24-4e86-a1d5-7ae54d450659",
    "clientId" : "tani-bilet-app",
    "name" : "",
    "description" : "",
    "rootUrl" : "http://localhost:8080",
    "adminUrl" : "",
    "baseUrl" : "http://localhost:8080",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "tani-bilet-app",
    "redirectUris" : [ "http://localhost:8080/swagger-ui/*", "http://localhost:8080/login/oauth2/code/keycloak" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1742481400",
      "backchannel.logout.session.required" : "true",
      "frontchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "+",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "service_account", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ ],
      "policies" : [ ],
      "scopes" : [ ],
      "decisionStrategy" : "UNANIMOUS"
    }
  } ],
  "clientScopes" : [ {
    "id" : "1072dcd0-224b-456f-a370-76d6026394d6",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "f112af65-cb92-48d0-902a-4b7dab2ca20c",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "ef86dc2e-74f6-4583-9d99-c3106ae5969a",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "cef00bc4-22aa-43f2-a75c-c8145632b459",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "e2db0a90-960a-4dde-818b-427a865f68d8",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "7a2d32b9-6595-4fbd-b277-131de7cc3303",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4ecec53f-3259-4e14-989e-bfeea26b9824",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a8239a24-d9a4-45e1-9edb-835f77bf1f2f",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "0bdc7c83-45da-4d92-afe1-974de405a54a",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3a678e1e-acff-47e4-885d-2ff435cd5a6a",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "002e48cb-06f9-4e43-a458-96e6a0da2458",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "43e1d683-5e4a-4ff4-9d3f-0f55758a8422",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "725f5efa-d2ed-4da5-91b3-77082a1655e3",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "aacba916-3990-403d-9548-17aef8e5696d",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c1d19a0a-dff2-468a-920c-024c50cd63cb",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "48057ee1-342b-4163-b7a8-e8c71de78af5",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "88f67f76-9327-449b-accf-bfba0f57fc6b",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1ae8f950-007e-48d3-b5a6-142ec0779b78",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ea49a579-43e4-4ec6-ba5c-62aed098a27f",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "1402edfe-dae3-4ce6-aa46-b3f42b3a72ab",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "b1bb1245-7755-4a3e-8bcb-674a1ceef86a",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "126efbaa-53f8-443e-b73d-03b691ea8e63",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "53acd9b0-cc36-43fb-bec2-f5f2e4c3909e",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "4e92e4ab-8b54-4a31-bc9f-24bca2a526e6",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "3f4a1aab-8e3c-4c17-a8e7-99729cbc5971",
    "name" : "saml_organization",
    "description" : "Organization Membership",
    "protocol" : "saml",
    "attributes" : {
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "05dab5af-c909-4865-8653-28ba3ae39c50",
      "name" : "organization",
      "protocol" : "saml",
      "protocolMapper" : "saml-organization-membership-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "c1dae3f2-04e5-49f1-9718-27fd32b086da",
    "name" : "service_account",
    "description" : "Specific scope for a client enabled for service accounts",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "7fd4d11f-621e-4f44-b703-685152473144",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3efe408b-02f4-40d0-9447-ab5a07a81dc2",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3d37b606-8349-461c-b2da-ae548dd93f6a",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "b8ae314e-c46f-4226-9cc8-c535ad8f1070",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "3b3fb125-51a4-4561-84c9-3c98028d783c",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "e073413f-4651-45a2-ab31-594289b56918",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "3adb883c-add8-4581-9f0b-56af1245d927",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "7bfb7d2b-e2d0-4e87-bcf9-d794bd77eafb",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "f29074d0-3819-42ad-bab1-8d1e8965f2bd",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "52ea5f8d-61c5-4134-aa47-033a87d722ee",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "e06929dd-c401-4340-b5ae-4dabcc12ceea",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "c544246d-98b4-4307-86de-8ec6dabed184",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "bd74a10a-0876-436b-8978-4c9bcce5a6d8",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "f0609636-6f63-491e-afc2-0e10c10b6dda",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "643ff469-f085-4474-abdb-1ea12ef08722",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "d4227546-43ad-4664-a134-269082f3fd2b",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "f0c1a8e4-f5cb-49be-b246-8bbfab772690",
    "name" : "organization",
    "description" : "Additional claims about the organization a subject belongs to",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${organizationScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "36cc1e47-c862-43bc-89e1-9baf7c7f2728",
      "name" : "organization",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-organization-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "organization",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "da72432e-c9aa-4d8d-b592-5e38fa4fdf03",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "5b04a38e-5758-41c6-bda2-b44f0e46267c",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "b282ccaf-2103-42ca-955e-8402508ecec3",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "297d1774-3cde-4d75-9bb4-50d895e97c2e",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "6b28d5ba-7c40-4fe5-88e3-1a650a17298b",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "562816e3-cf1c-4b83-a7d6-85cfc3580588",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "f3e6791b-eec5-4293-a850-53505087efba",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "67a9019d-62bc-4683-90b4-65710d68ce65",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper", "saml-role-list-mapper" ]
      }
    }, {
      "id" : "37b7e1e9-bf80-40ad-ace0-138d9aa70ea4",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "0376a1f7-77a2-477d-877b-a1728bab95e6",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "8f509007-a491-4449-8a9f-e5d9950acc25",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "oidc-full-name-mapper", "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "saml-user-attribute-mapper" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "b04a7cba-8766-4118-bd31-f7ec704be9cd",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAw5NYwW7sO8+4A2hDjw+Fle3Rwz0goPVixXt+FgzuHja/oe6BeroIUOf4uflkg92QFp1CPHWYPKRSwKwhztJm99/UScJuxwFXzqzUDYAuvqL76xunN3ty/rL/QuP+3yU4GEfqLpHH3QIpTPIRvYnkT0hX1fDotvzs7NkgEHc7COEE4qGSjr5/Vh5SRlwEk9jFcCDl+Pc4bUrrzBRDjsUdwZ6sS+Pl5fvopqkp6Aqr9vb1n9O4zKfVK4/DgR3UlYsYvE9Ed+w5vZ9/Ov4GHbVxgVRST9l8WNjiQ0jxiEqS67wVrO5NyCQdw2EIC09GHi0KEpJHPyRRhMHRowbR7vIg4QIDAQABAoIBADsjTf5HtUUsvV7CY1NaBTHd1MTtsfUZ3kEK44h1ZndaZL3padubbzJPwqUxpVQ+ZfiAmuu/P0ZvBdre8eYhNyOS2hVnpqmkXVHQbtqaPQhGLljcZsbfHFmp9Ifce1AsZ/bnoAdu63mH0sdCl1yx2oiivnShwSy79ER2LzzrYL2BDb05SASHnDpUwcS7RdMito5y5uFf/wDq6emK8ideWWjL50xGQ43TgIycLO2WYXxfdiBuyHsx2oDSyr14qHIJfaHw+n7S0x8YUrVHsoODpMlb9Cza1Qve0yyiZ/OfeeLDfcFx0qe1wS6GRxp1AREHXB4qt1+d9fpsPKO7pRPglqUCgYEA7DJON00HZuWyk28rmIYgH/e+bqJLVOWgiiG3FMURUHCbr2akXv7VZ+i55om74Fp5aWEj/UdhURRZCobpLhBgHPknCkw3PKQMkeNyjdio3N9YbYmBWeNLDi3WCvyhdAY9iXinzDQ1Bt5pXzdODB/0P5N4ovy5Q7+DijVc+zBWh3cCgYEA0/kofaJs+VU3INuKw8nrazuf2WWlLen//hynNT4xM62rfd5XsvqKNrF/eZogxFDQ95VlA8W7ouRP7n57n8fkKD890iFNv0Lx+AfLpmx5NLO/9Y7Y+2X9P1Mjf2tO1CyrMv3vGa7MaxrECwx0uK5ySbvlNmyx9ECIJP0kaMCTYGcCgYEA37DI2KDP+MhjNjQb8qhb9kqYBIkZlP6f6xIBJN96BVeQai5oTztC+tSycr5QuyqUP5PrFK0sYjBGH60jWyfRDr98FMmXqounB+eDjwj4661uPtbyNSII7BXG18LoWUyrrO0i5UcwTSAIZU+oT91XYXqVzq5P+vR+bD8bnxzpZgMCgYBWs5TiPmuAWGCiKepKRu7p/4tUaoTzkMDKeYHS/0s0rhZ091q7tEqQMG3JmUdJxRyUCCE3N8uVxvkCve1m32XtKGDq8ABS+Njr8JRV0AyLh/I+SF1sBr1dB25/ka6+jj7ALql7wcmPDXWeZ0vetku86QPKDQ+ErliBeKFJz2r4hQKBgFhRYR638a8A5NxQf6iOT7ZVdSPQuKISvZ0Z1Dv0F8Gq0exbRAh/MJQ4hLDw7Mw+wCDTNUgtYnnAfgj/ZJgogVqqqgjY4El5cQzrVLd82xQ43QqYGHcKhvP+RXq6ZsqbODzlFCWnStgpQUZnQ6SErDG+zNv/irx1cNJQkpaTY4KS" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICozCCAYsCBgGVs/gpcDANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAp0YW5pLWJpbGV0MB4XDTI1MDMyMDE0MzA0MFoXDTM1MDMyMDE0MzIyMFowFTETMBEGA1UEAwwKdGFuaS1iaWxldDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMOTWMFu7DvPuANoQ48PhZXt0cM9IKD1YsV7fhYM7h42v6HugXq6CFDn+Ln5ZIPdkBadQjx1mDykUsCsIc7SZvff1EnCbscBV86s1A2ALr6i++sbpzd7cv6y/0Lj/t8lOBhH6i6Rx90CKUzyEb2J5E9IV9Xw6Lb87OzZIBB3OwjhBOKhko6+f1YeUkZcBJPYxXAg5fj3OG1K68wUQ47FHcGerEvj5eX76KapKegKq/b29Z/TuMyn1SuPw4Ed1JWLGLxPRHfsOb2ffzr+Bh21cYFUUk/ZfFjY4kNI8YhKkuu8FazuTcgkHcNhCAtPRh4tChKSRz8kUYTB0aMG0e7yIOECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAZ9K7EirxnLsoDSIAo9C8ziORWzo52YXzEm4j/qYdjE5LIlh3uIigc0U6TYdRjStR8EZfa+PcJR/nhSmMgvljBwk96TKhNAIHuhd2gYygh2u246ShXkW/rQRNgj3ZMeSwDDpidlXMnxMeuBUstc4mNlqxAeL6MjfBF8YO1qXhntb9dL//HAi+tCbqsLPOtv+AbQSAjAFoDgK4MT4ussfhPxKOcpSLKm4lzTu/Fm+j1GDtfvPJU7xKVxGKDr688cdV12MaFS5mAzZuyKrXKwXGHBuuGgkpyZcazh3Ei30/8WiHq/H4/FzCxYkjPQRS6QYfqkFWDn3xNHm/j5m/EOogWw==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "aa818946-3667-4846-94c9-e9f243c543e0",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "ce42e29b-fa3b-40c6-a8a8-b19438ae6e75" ],
        "secret" : [ "Zs8GUzlD4QT39lAndNIOa2Gm_b7ecn46DvDbQH4sJIDd1SsJivltt96g_Dnw2X3P3NtBecARpMbBuZIU41StGOF4NcKDXCkEGmbm9IJaBMtaRfjB7hikiWll-9BjowaSbpUyvW_WL_xGmC2yVkJuywPlLA8kUIgpmDEowZQX4WE" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "d9cf1630-a348-4850-9dc0-452ab8ce4624",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "b9ec2d0f-7da4-4026-964c-5e66b37450ce" ],
        "secret" : [ "9atT539gQ1A0vttB74s8CA" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "4ea179c3-0890-488e-a28a-785c147ccf31",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAumVtrznfwudDQFiOWZ/jfZofPDqaO2kjPpWfh5HfSUa2hDyFgUT3pAzS2RftKlsNcNEppzip45AtSwaLPcb5Ahn1pS5rI9ynWD9tkIXYBfY451+3r09R3rEddb5EowSAsHJBtz9ht4FYUmHbbV5oK7MnuW7pjByDQ/9S7aorZduy1qcA0LfGoNmoteAd1AEC/RPwSRITtq2e95emmpeMgJegFh/RO75KYATL+FX0Exs+bJY2uUZg6aAK8Y/qhFwWp6CFiu6LxwBkHGtvL+VaiCudt4c3wNDEBqRBLS2m2d06G7K+Fw1D3Q9ECRXVX2dWkEmvoVeN6Y/+O173Gr4izQIDAQABAoIBAB5zB1ICsE0UnmXakZaOigkwrj2WjS97Y2iL5L2u1L0Rsisz/9M4QwQnnCIeyH2M1ktBv/4zQX2NRfjlnsV+xZrURs6vII2BNE00P1/GnZ2LtYwGlOksmgE5Ccj8RhYjXCp238lhr0Lc/GKo3cGmFHpfD/Q47CoZVlA7W367t88xpx9I08dqNhMmc6apI9TuW8zkI8f53tMxFEkHjbg6BfRVJ33Jz7khXiALcJYBnIcOFZIG4hQyxjwj0FGSqpwcN2sqsVCPeaiddVIcYNKWbPxlM6XQH3Pbnf1Vzav6CtpYSfWyKMpo2C5+UQ7S68ShLWh42rUCNJlB/1HPjj/hAsECgYEA6mX8Sw94iLlUBGXgw8HYP5ZztuJvpUcl/B9TkENIt2SZws84JPBYy1gMwMtdlqMfwsggRlhjqsHELTraPuHsQeHMTF65oyX4/HsyKc1BPoi0Cgq601bN823AfI0S3cCaLkNY1GbROwnrV6LfiRkR9GrD18Xfs34yEBWrxh2DiHkCgYEAy5L1JV6WSwX5HebEOuNiFhsdH58G48T+NBUmOjbLQ+iBxCWi6g9mR3leg8CY2TBo+/Nb32ANXCE1z7dOzCLS1l2eXMV2a/+Y7wdh2drKwtXCqLFxWoPbpqITqc01jATEHXHQgP0kxy3BFSpincbooaot6kXOYCWscWFEbitM//UCgYASM4MozPW+IC3+/W47pTTGk0c+/0xOGD1B26jgfekKnJw3/WFNtQAgIiEzY1dMGDSiKmofLEPpAYzbOkOyOFbhMshrcbuWiJ9R87sMdezID1NzqCujt4zchzw4L7g0Uf1m9EHUlHtQy09kCbiz66dyREwa2DmrtXPrvdMN2kLZeQKBgQC1NLrB6NAfN9Hnq+JACObmhnwGCag4VsFv2uOMLfoBGJVp45aAgfSo6oAXBvkHWvAYVScSTo2V1Hnxy1l4nAbQicTND3e56mpXWlrfcMHLbDs5rbkYuQZr7RlTrDZdzGBFVWojZzG1miSkknX1u3iXbsQwJLLvIpm80rf22NRRgQKBgQCJ0MG7AoQ+unBTerD4tIyPzEOTuRnn3vamOjMTlXw6so7Oo8LPG9AeKmlXtDCjtejZTQ18kZc03Om87npTeZsSracSsSbFQdrd6yWssCRI7A8ovpw8Arazfd7d8vRTWWRYFED5+dgyA+JSPXWJ2fVcWsanwDX93DrgrrHmdKUF5g==" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICozCCAYsCBgGVs/gq5jANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAp0YW5pLWJpbGV0MB4XDTI1MDMyMDE0MzA0MFoXDTM1MDMyMDE0MzIyMFowFTETMBEGA1UEAwwKdGFuaS1iaWxldDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALplba8538LnQ0BYjlmf432aHzw6mjtpIz6Vn4eR30lGtoQ8hYFE96QM0tkX7SpbDXDRKac4qeOQLUsGiz3G+QIZ9aUuayPcp1g/bZCF2AX2OOdft69PUd6xHXW+RKMEgLByQbc/YbeBWFJh221eaCuzJ7lu6Ywcg0P/Uu2qK2XbstanANC3xqDZqLXgHdQBAv0T8EkSE7atnveXppqXjICXoBYf0Tu+SmAEy/hV9BMbPmyWNrlGYOmgCvGP6oRcFqeghYrui8cAZBxrby/lWogrnbeHN8DQxAakQS0tptndOhuyvhcNQ90PRAkV1V9nVpBJr6FXjemP/jte9xq+Is0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAJOsuYRPC1L/DzDqNErruIK01eDKUc4S+GbkL96gKx6B8yGFk3PubuzhKbvlz60NQ5czJgVzJzw9hXso/VP64GTwov1v21bTyKJZUpXxbllJgb+heecK+Oi66uZF4oH7ilu+nfAi9U4aHUnK2PwaBFybNHfvtF++QxhNM8iXmkTfg2BmWKLeCguin3gphGTVvS3h7N9KNO7OtTyDHFYXzT3OrByQC3CWij67ylx9h7LB0s1MLaeZNpXeEQPqDfNixrmGURxzDCiMXbWdwpSMXRcjBT857d5Nt62kAdel34Lvzkw8FV1XKCUr1RaQn6JmFiNSwQfEd+BeCAhccTE7zIw==" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "b8eb0e04-1d56-46f1-9fcf-a0c06591f503",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4d4a0df4-a3ea-4998-abc6-d931e7593dcd",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9f3d3f06-38ff-49c3-95b4-fd4f7ebd255b",
    "alias" : "Browser - Conditional Organization",
    "description" : "Flow to determine if the organization identity-first login is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "organization",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "320aa89a-a837-4294-866e-9ee6ce0ecde9",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bdc202bd-c000-4d46-acfb-04ab12e4ee8c",
    "alias" : "First Broker Login - Conditional Organization",
    "description" : "Flow to determine if the authenticator that adds organization members is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "idp-add-organization-member",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4750026d-b129-45ec-a0e0-0c7c2382746e",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a629466b-10f7-4ac3-b341-df255f26c924",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f319885f-4291-42d6-873a-4d1e47b6876b",
    "alias" : "Organization",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e502ef10-deb9-4cdf-b80b-f62df86012a9",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "461ea4bd-a5c7-423f-984d-ca22fee999ca",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "308c6ee0-4e32-4e25-9b72-c2f629c741fb",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "cb895225-640f-4740-8beb-89c802c49781",
    "alias" : "browser",
    "description" : "Browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 26,
      "autheticatorFlow" : true,
      "flowAlias" : "Organization",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "dcae456d-0943-49d7-9d24-df27f59da0e9",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "02e2fd9c-d56f-4da7-a58f-1d6b7c15065c",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6278df1f-8f48-4b28-b835-f461eb813442",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "935e7494-2ce8-487a-86f2-fbe0e61b3474",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 50,
      "autheticatorFlow" : true,
      "flowAlias" : "First Broker Login - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b367be62-a53b-43d1-b688-4053174c8150",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ba721ddd-9f06-4181-8b5e-1d3ff9231ab4",
    "alias" : "registration",
    "description" : "Registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "abd5c570-7c09-4710-a0b9-f0dbdcc6c6fb",
    "alias" : "registration form",
    "description" : "Registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "012872db-5f9d-4d40-8682-47386e942088",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "94e517a0-56c2-496e-9827-5da465a142da",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "b3be1c68-31a3-4ed1-a780-9e25feefbe56",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "05b89314-7a63-4b90-99cd-20e73c11d99b",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaAuthRequestedUserHint" : "login_hint",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false",
    "cibaExpiresIn" : "120",
    "oauth2DeviceCodeLifespan" : "600",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "frontendUrl" : "",
    "acr.loa.map" : "{}"
  },
  "keycloakVersion" : "26.1.4",
  "userManagedAccessAllowed" : true,
  "organizationsEnabled" : false,
  "verifiableCredentialsEnabled" : false,
  "adminPermissionsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}